apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: localicity-app
  labels:
    app: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: pietrantuonofranco/express
        ports:
        - containerPort: 3000
        command: ["/bin/sh", "-c"]
        args:
          - npm run migration:run:prod && npm start
        env:
        - name: DB_HOST
          value: "postgresql-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: db-password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: db-name
        - name: EXPRESS_PORT
          value: "3000"
        - name: SALT_ROUNDS
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: salt-rounds
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: jwt-secret
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: cors-origin
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: node-env
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 45
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: localicity-app
spec:
  selector:
    app: api
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP